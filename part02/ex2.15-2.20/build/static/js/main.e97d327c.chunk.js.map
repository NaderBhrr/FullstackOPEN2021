{"version":3,"sources":["components/SearchPhonebook/SearchPhonebook.js","components/ContactsList/ContactList.js","components/AddContactForm/AddContactForm.js","components/Message/Message.js","server/server.js","components/App.js","index.js"],"names":["SearchPhonebook","handleSearch","searchContact","useState","searchInput","setSearchInput","searchMessage","type","name","placeholder","onKeyDown","onChange","event","target","value","searchResult","ContactList","persons","deleteContact","map","person","index","number","onClick","_id","AddContactForm","props","onSubmit","handleSubmit","id","newName","handleNewPerson","required","aria-required","autoFocus","pattern","htmlFor","newPhoneNumber","handleNewPhoneNumber","autoComplete","Message","action","error","messages","addPerson","changeNumber","deletePerson","messageStyle","className","baseUrl","phonebookCRUD","getPersons","cb","axios","get","then","response","data","newPerson","post","personId","cbError","delete","catch","updatePerson","updatedPerson","put","App","setPersons","setNewName","setNewPhoneNumber","setSearchContact","actionMessage","setActionMessage","errorMessage","setErrorMessage","useEffect","test","alert","key","searchValue","find","toLowerCase","preventDefault","some","console","log","updatedContact","window","confirm","setTimeout","every","concat","filter","message","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e97d327c.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst SearchPhonebook = ({ handleSearch, searchContact }) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const searchMessage = {\n    0: '',\n    1: `The contact you searched is found:\\n ${4}`,\n    2: 'Contact not found',\n  };\n  const handleSearchInput = (event) => {\n    setSearchInput(event.target.value);\n  };\n  return (\n    <div>\n      <h4>Search Phonebook:</h4>\n      <input\n        type='search'\n        name='search'\n        placeholder='Search a contact'\n        onKeyDown={handleSearch}\n        onChange={handleSearchInput}\n      />\n      <span>\n        {/* Bugs:\n        * When a search is done, and you clean the search input, if you hit any keyborad, \n        still the \"not found\" message is shown\n        */}\n        {searchContact.searchResult && searchInput\n          ? `The contact you searched is found:\\n ${searchContact.searchResult.name}`\n          : !searchContact.searchResult && searchInput\n          ? searchMessage[2]\n          : searchMessage[0]}\n      </span>\n    </div>\n  );\n};\n\nexport default SearchPhonebook;\n","import React from 'react';\n\nconst ContactList = ({ persons, deleteContact }) => (\n  <div>\n    <h2>Contact Information:</h2>\n    <ul>\n      {persons.map((person, index) => (\n        <li key={index}>\n          {person.name} <div>&nbsp;{person.number}</div>{' '}\n          <button onClick={() => deleteContact(person._id, person.name)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default ContactList;\n","import React from 'react';\n\nimport './AddContactForm.css';\n\nconst AddContactForm = ({ ...props }) => {\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <fieldset>\n          <legend>Add New Contact</legend>\n          <div>\n            <input\n              id='new-contact'\n              type='text'\n              value={props.newName}\n              onChange={props.handleNewPerson}\n              required\n              placeholder='e.g. Tom Cruise'\n              aria-required={true}\n              autoFocus\n              pattern='^([\\D]{2,30}\\s+)+([a-zA-Z]{2,30})$'\n            />\n            <label htmlFor='new-contact'>Name:</label>\n          </div>\n          <div>\n            <input\n              id='new-contact-number'\n              type='tel'\n              value={props.newPhoneNumber}\n              onChange={props.handleNewPhoneNumber}\n              required\n              placeholder={`Enter Contact's Phone Number ...`}\n              autoComplete='off'\n            />\n            <label htmlFor='new-contact-number'>Phone Number:</label>\n          </div>\n          <div>\n            <button type='submit'>Add</button>\n          </div>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n","import React from 'react';\nimport './Message.css';\n\nconst Message = ({ action, error }) => {\n  if (action === null) return null;\n\n  const messages = {\n    CRUD: {\n      addPerson: 'New contact is added to the phonebook',\n      changeNumber: 'The contact phone number updated',\n      deletePerson: 'Contact successfully deleted from the phonebook.',\n    },\n    errors: {\n      deletePerson: 'The contact is already removed from the phonebook',\n    },\n  };\n\n  const messageStyle =\n    action === 'add'\n      ? 'add general'\n      : action === 'update'\n      ? 'update general'\n      : action === 'delete'\n      ? 'delete general'\n      : null;\n\n  return (\n    <div className={messageStyle}>\n      <span className='.error general'>\n        {error ? messages.errors.deletePerson : null}\n      </span>\n      {error\n        ? null\n        : action === 'add'\n        ? messages.CRUD.addPerson\n        : action === 'update'\n        ? messages.CRUD.changeNumber\n        : action === 'delete'\n        ? messages.CRUD.deletePerson\n        : null}\n    </div>\n  );\n};\n\nexport default Message;\n","import axios from 'axios';\nconst baseUrl = `/api/persons`;\n\nconst addPerson = (newPerson, cb) =>\n  axios\n    .post(baseUrl, newPerson)\n    .then((response) => response.data)\n    .then(cb);\n\nconst getPersons = (cb) =>\n  axios\n    .get(baseUrl)\n    .then((response) => response.data)\n    .then(cb);\n\nconst updatePerson = (updatedPerson, cb) =>\n  axios\n    .put(`${baseUrl}/${updatedPerson._id}`, updatedPerson)\n    .then((response) => response.data)\n    .then(cb);\n\nconst deletePerson = (personId, cb, cbError) =>\n  axios\n    .delete(`${baseUrl}/${personId}`)\n    .then((response) => response.data)\n    .then(cb)\n    .catch(cbError);\n\nconst phonebookCRUD = {\n  getPersons,\n  addPerson,\n  deletePerson,\n  updatePerson,\n};\n\nexport default phonebookCRUD;\n","import React, { useEffect, useState } from 'react';\nimport SearchPhonebook from './SearchPhonebook/SearchPhonebook';\nimport ContactList from './ContactsList/ContactList';\nimport AddContactForm from './AddContactForm/AddContactForm';\nimport Message from './Message/Message';\nimport phonebookCRUD from '../server/server';\n\nconst { getPersons, addPerson, updatePerson, deletePerson } = phonebookCRUD;\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [searchContact, setSearchContact] = useState({});\n  const [actionMessage, setActionMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    getPersons((data) => setPersons(data));\n  }, [actionMessage, errorMessage]);\n\n  /* \n    - The problem with this regex is that is does not allow names with . e.g. thomas Jr.\n  */\n  if (/[^\\w\\s]/g.test(newName)) {\n    alert(`${newName} is not a valid entry please try again`);\n    setNewName('');\n    setNewPhoneNumber('');\n  }\n\n  const handleSearchPhonebook = (event) => {\n    if (event.key === 'Enter') {\n      const searchValue = event.target.value;\n      setSearchContact({\n        searchValue,\n        searchResult: persons.find(\n          (person) => person.name.toLowerCase() === searchValue.toLowerCase()\n        ),\n      });\n    }\n\n    return;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Error handling conditions\n    if (/[^\\w\\s]/g.test(newName)) {\n      alert(`${newName} is not a valid entry please try again`);\n      setNewName('');\n      setNewPhoneNumber('');\n\n      return;\n    }\n    if (!/\\d/g.test(newPhoneNumber)) {\n      alert(`${newPhoneNumber} is not a valid entry. Please try again`);\n      setNewName('');\n      setNewPhoneNumber('');\n\n      return;\n    }\n    if (\n      persons.some(\n        (person) => person.name.toLowerCase() === newName.toLowerCase()\n      )\n    ) {\n      if (persons.some((person) => person.number === newPhoneNumber)) {\n        console.log('already true');\n        alert(`${newName} already exists in the phonebook`);\n        setNewName('');\n        setNewPhoneNumber('');\n        return;\n      }\n      const updatedContact = {\n        ...persons.find(\n          (person) => person.name.toLowerCase() === newName.toLowerCase()\n        ),\n        number: newPhoneNumber,\n      };\n      if (\n        window.confirm(\n          `${updatedContact.name} is already added to the phonebook, do you want to update old number with a new number?`\n        )\n      ) {\n        updatePerson(updatedContact, (data) => {\n          setPersons(\n            persons.map((person) => (person._id === data._id ? data : person))\n          );\n        });\n\n        setNewName('');\n        setNewPhoneNumber('');\n        setActionMessage('update');\n\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n        return;\n      } else {\n        setNewName('');\n        setNewPhoneNumber('');\n      }\n    }\n\n    if (\n      !persons.every(\n        (person) =>\n          person.name.toLowerCase() !== newName.toLowerCase() &&\n          person.number === newPhoneNumber\n      )\n    ) {\n    }\n    addPerson(\n      {\n        name: newName,\n        number: newPhoneNumber,\n      },\n      (data) => {\n        setPersons(persons.concat(data));\n        setNewName('');\n        setNewPhoneNumber('');\n        setActionMessage('add');\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n      }\n    );\n  };\n\n  const handleNewPerson = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewPhoneNumber = (event) => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleDeletePerson = (id, person) => {\n    if (window.confirm(`Are you sure to delete ${person}?`))\n      deletePerson(\n        id,\n        () => {\n          getPersons((data) => setPersons(data));\n        },\n        (error) => {\n          setErrorMessage(`deleteError`);\n          setPersons(persons.filter((person) => person.id !== id));\n          console.error(error.message);\n\n          setTimeout(() => {\n            setActionMessage(null);\n          }, 5000);\n        }\n      );\n    setActionMessage('delete');\n    setTimeout(() => {\n      setActionMessage(null);\n    }, 5000);\n\n    return;\n  };\n\n  return (\n    <div className='App'>\n      <h2>Phonebook</h2>\n      <Message action={actionMessage} error={errorMessage} />\n      <SearchPhonebook\n        handleSearch={handleSearchPhonebook}\n        searchContact={searchContact}\n      />\n      <AddContactForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        handleNewPerson={handleNewPerson}\n        newPhoneNumber={newPhoneNumber}\n        handleNewPhoneNumber={handleNewPhoneNumber}\n      />\n      <ContactList persons={persons} deleteContact={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}