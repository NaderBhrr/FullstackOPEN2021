{"version":3,"sources":["components/SearchPhonebook/SearchPhonebook.js","components/ContactsList/ContactList.js","components/AddContactForm/AddContactForm.js","components/Message/Message.js","server/server.js","components/App.js","index.js"],"names":["SearchPhonebook","handleSearch","searchContact","useState","searchInput","setSearchInput","searchMessage","type","name","placeholder","onKeyDown","onChange","event","target","value","searchResult","ContactList","persons","deleteContact","className","map","person","index","number","onClick","_id","AddContactForm","props","onSubmit","handleSubmit","id","newName","handleNewPerson","required","aria-required","autoFocus","htmlFor","newPhoneNumber","handleNewPhoneNumber","autoComplete","Message","action","error","messages","addPerson","changeNumber","deletePerson","minNameLength","found","messageStyle","baseUrl","phonebookCRUD","getPersons","cb","axios","get","then","response","data","newPerson","post","personId","delete","updatePerson","updatedPerson","put","console","log","App","setPersons","setNewName","setNewPhoneNumber","setSearchContact","actionMessage","setActionMessage","errorMessage","setErrorMessage","useEffect","test","alert","key","searchValue","find","toLowerCase","preventDefault","some","window","confirm","catch","setTimeout","concat","filter","message","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.83f32a73.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst SearchPhonebook = ({ handleSearch, searchContact }) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const searchMessage = {\n    0: '',\n    1: `The contact you searched is found:\\n ${4}`,\n    2: 'Contact not found',\n  };\n  const handleSearchInput = (event) => {\n    setSearchInput(event.target.value);\n  };\n  return (\n    <div>\n      <h4>Search Phonebook:</h4>\n      <input\n        type='search'\n        name='search'\n        placeholder='Search a contact'\n        onKeyDown={handleSearch}\n        onChange={handleSearchInput}\n      />\n      <span>\n        {/* Bugs:\n        * When a search is done, and you clean the search input, if you hit any keyborad, \n        still the \"not found\" message is shown\n        */}\n        {searchContact.searchResult && searchInput\n          ? `The contact you searched is found:\\n ${searchContact.searchResult.name}`\n          : !searchContact.searchResult && searchInput\n          ? searchMessage[2]\n          : searchMessage[0]}\n      </span>\n    </div>\n  );\n};\n\nexport default SearchPhonebook;\n","import React from 'react';\nimport './ContactList.css';\nconst ContactList = ({ persons, deleteContact }) => (\n  <div className='contact-list'>\n    <h3>Contact Information:</h3>\n    <ul>\n      {persons.map((person, index) => (\n        <li key={index}>\n          {person.name} <div>&nbsp;{person.number}</div>{' '}\n          <button onClick={() => deleteContact(person._id, person.name)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default ContactList;\n","import React from 'react';\n\nimport './AddContactForm.css';\n\nconst AddContactForm = ({ ...props }) => {\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <fieldset>\n          <legend>Add New Contact</legend>\n          <div>\n            <input\n              id='new-contact'\n              type='text'\n              value={props.newName}\n              onChange={props.handleNewPerson}\n              required\n              placeholder='e.g. Tom Cruise'\n              aria-required={true}\n              autoFocus\n              // pattern='^([\\D]{2,30}\\s+)+([a-zA-Z]{2,30})$'\n            />\n            <label htmlFor='new-contact'>Name:</label>\n          </div>\n          <div>\n            <input\n              id='new-contact-number'\n              type='tel'\n              value={props.newPhoneNumber}\n              onChange={props.handleNewPhoneNumber}\n              required\n              placeholder={`Enter Contact's Phone Number ...`}\n              autoComplete='off'\n            />\n            <label htmlFor='new-contact-number'>Phone Number:</label>\n          </div>\n          <div>\n            <button type='submit'>Add</button>\n          </div>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n","import React from 'react';\nimport './Message.css';\n\nconst Message = ({ action, error }) => {\n  if (action === null) return null;\n  const messages = {\n    CRUD: {\n      addPerson: 'New contact is added to the phonebook',\n      changeNumber: 'The contact phone number updated',\n      deletePerson: 'Contact successfully deleted from the phonebook.',\n    },\n    errors: {\n      deletePerson: 'The contact is already removed from the phonebook',\n      minNameLength: 'Person name must be 3 characters at least',\n    },\n    search: {\n      found: 'The contact you search is available in the Phonebook',\n    },\n  };\n\n  const messageStyle =\n    action === 'add'\n      ? 'add general'\n      : action === 'update'\n      ? 'update general'\n      : action === 'delete' || 'validate'\n      ? 'delete general'\n      : null;\n\n  return (\n    <div className={messageStyle}>\n      <span className='.error general'>\n        {error === 'deleteError'\n          ? messages.errors.deletePerson\n          : error === 'minLengthError'\n          ? messages.errors.minNameLength\n          : null}\n      </span>\n      {error\n        ? null\n        : action === 'add'\n        ? messages.CRUD.addPerson\n        : action === 'update'\n        ? messages.CRUD.changeNumber\n        : action === 'delete'\n        ? messages.CRUD.deletePerson\n        : action === 'search'\n        ? messages.search.found\n        : null}\n    </div>\n  );\n};\n\nexport default Message;\n","import axios from 'axios';\nconst baseUrl = `/api/persons`;\n\nconst addPerson = (newPerson, cb) =>\n  axios\n    .post(baseUrl, newPerson)\n    .then((response) => response.data)\n    .then(cb);\n\nconst getPersons = (cb) =>\n  axios\n    .get(baseUrl)\n    .then((response) => response.data)\n    .then(cb);\n\nconst updatePerson = (updatedPerson, cb) =>\n  axios\n    .put(`${baseUrl}/${updatedPerson._id}`, updatedPerson)\n    .then((response) => {\n      console.log(response);\n      return response.data;\n    })\n    .then(cb);\n\nconst deletePerson = (personId, cb) =>\n  axios\n    .delete(`${baseUrl}/${personId}`)\n    .then((response) => response.data)\n    .then(cb);\n\nconst phonebookCRUD = {\n  getPersons,\n  addPerson,\n  deletePerson,\n  updatePerson,\n};\n\nexport default phonebookCRUD;\n","import React, { useEffect, useState } from 'react';\nimport SearchPhonebook from './SearchPhonebook/SearchPhonebook';\nimport ContactList from './ContactsList/ContactList';\nimport AddContactForm from './AddContactForm/AddContactForm';\nimport Message from './Message/Message';\nimport phonebookCRUD from '../server/server';\nimport './App.css';\n\nconst { getPersons, addPerson, updatePerson, deletePerson } = phonebookCRUD;\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [searchContact, setSearchContact] = useState({});\n  const [actionMessage, setActionMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    getPersons((data) => setPersons(data));\n  }, [actionMessage, errorMessage]);\n\n  /* \n    - The problem with this regex is that is does not allow names with . e.g. thomas Jr.\n  */\n  if (/[^\\w\\s]/g.test(newName)) {\n    alert(`${newName} is not a valid entry please try again`);\n    setNewName('');\n    setNewPhoneNumber('');\n  }\n\n  const handleSearchPhonebook = (event) => {\n    if (event.key === 'Enter') {\n      const searchValue = event.target.value;\n      setSearchContact({\n        searchValue,\n        searchResult: persons.find(\n          (person) => person.name.toLowerCase() === searchValue.toLowerCase()\n        ),\n      });\n    }\n\n    return;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Error handling conditions\n    if (/[^\\w\\s]/g.test(newName)) {\n      alert(`${newName} is not a valid entry please try again`);\n      setNewName('');\n      setNewPhoneNumber('');\n\n      return;\n    }\n    if (!/\\d/g.test(newPhoneNumber)) {\n      alert(`${newPhoneNumber} is not a valid entry. Please try again`);\n      setNewName('');\n      setNewPhoneNumber('');\n\n      return;\n    }\n    if (\n      persons.some(\n        (person) => person.name.toLowerCase() === newName.toLowerCase()\n      )\n    ) {\n      if (persons.some((person) => person.number === newPhoneNumber)) {\n        console.log('already true');\n        alert(`${newName} already exists in the phonebook`);\n        setNewName('');\n        setNewPhoneNumber('');\n        return;\n      }\n      const updatedPerson = {\n        ...persons.find(\n          (person) => person.name.toLowerCase() === newName.toLowerCase()\n        ),\n        number: newPhoneNumber,\n      };\n      if (\n        window.confirm(\n          ` \" ${updatedPerson.name} \" is already added to the phonebook, do you want to update old number with a new number?`\n        )\n      ) {\n        updatePerson(updatedPerson, (data) => {\n          setPersons(\n            persons.map((person) => (person._id === data._id ? data : person))\n          );\n        }).catch((error) => console.log(error));\n\n        setNewName('');\n        setNewPhoneNumber('');\n        setActionMessage('update');\n\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n        return;\n      } else {\n        setNewName('');\n        setNewPhoneNumber('');\n      }\n    }\n\n    if (\n      !persons.some(\n        (person) =>\n          person.name.toLowerCase() === newName.toLowerCase() &&\n          person.number === newPhoneNumber\n      )\n    ) {\n    }\n    addPerson(\n      {\n        name: newName,\n        number: newPhoneNumber,\n      },\n      (data) => {\n        setPersons(persons.concat(data));\n        setNewName('');\n        setNewPhoneNumber('');\n        setActionMessage('add');\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n      }\n    ).catch((error) => {\n      setErrorMessage('minLengthError');\n      setActionMessage('validate');\n\n      setTimeout(() => {\n        setActionMessage(null);\n        setErrorMessage(null);\n      }, 3500);\n    });\n  };\n\n  const handleNewPerson = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewPhoneNumber = (event) => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleDeletePerson = (id, person) => {\n    if (window.confirm(`Are you sure to delete ${person}?`))\n      deletePerson(id, () => {\n        getPersons((data) => setPersons(data));\n      }).catch((error) => {\n        setErrorMessage(`deleteError`);\n        setPersons(persons.filter((person) => person.id !== id));\n        console.error(error.message);\n\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n      });\n\n    setActionMessage('delete');\n    setTimeout(() => {\n      setActionMessage(null);\n    }, 3000);\n\n    return;\n  };\n\n  return (\n    <div className='App'>\n      <h2>Phonebook</h2>\n      <Message action={actionMessage} error={errorMessage} />\n      <SearchPhonebook\n        handleSearch={handleSearchPhonebook}\n        searchContact={searchContact}\n      />\n      <AddContactForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        handleNewPerson={handleNewPerson}\n        newPhoneNumber={newPhoneNumber}\n        handleNewPhoneNumber={handleNewPhoneNumber}\n      />\n      <ContactList persons={persons} deleteContact={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}