{"version":3,"sources":["components/SearchPhonebook/SearchPhonebook.js","components/ContactsList/ContactList.js","components/AddContactForm/AddContactForm.js","components/Message/Message.js","server/server.js","components/App.js","index.js"],"names":["SearchPhonebook","handleSearch","searchContact","useState","searchInput","setSearchInput","searchMessage","type","name","placeholder","onKeyDown","onChange","event","target","value","searchResult","ContactList","persons","deleteContact","map","person","index","number","onClick","id","AddContactForm","props","onSubmit","handleSubmit","newName","handleNewContact","newPhoneNumber","handleNewPhoneNumber","Message","action","error","messages","addPerson","changeNumber","deletePerson","messageStyle","className","baseUrl","phonebookRecerd","getPersons","cb","axios","get","then","response","data","newPerson","post","contactID","cbError","delete","catch","updatePerson","updatedPerson","put","App","setPersons","setNewName","setNewPhoneNumber","setSearchContact","actionMessage","setActionMessage","errorMessage","setErrorMessage","useEffect","test","alert","key","searchValue","find","toLowerCase","preventDefault","every","console","log","updatedContact","window","confirm","setTimeout","concat","filter","message","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8b541185.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst SearchPhonebook = ({ handleSearch, searchContact }) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const searchMessage = {\n    0: '',\n    1: `The contact you searched is found:\\n ${4}`,\n    2: 'Contact not found',\n  };\n  const handleSearchInput = (event) => {\n    setSearchInput(event.target.value);\n  };\n  return (\n    <div>\n      <h4>Search Phonebook:</h4>\n      <input\n        type='search'\n        name='search'\n        placeholder='Search a contact'\n        onKeyDown={handleSearch}\n        onChange={handleSearchInput}\n      />\n      <span>\n        {/* Buga:\n        * When a search is done, and you clean the search input, if you hit any keyborad, \n        still the \"not found\" message is shown\n        */}\n        {searchContact.searchResult && searchInput\n          ? `The contact you searched is found:\\n ${searchContact.searchResult.name}`\n          : !searchContact.searchResult && searchInput\n          ? searchMessage[2]\n          : searchMessage[0]}\n      </span>\n    </div>\n  );\n};\n\nexport default SearchPhonebook;\n","import React from 'react';\n\nconst ContactList = ({ persons, deleteContact }) => (\n  <div>\n    <h2>Contact Information:</h2>\n    <ul>\n      {persons.map((person, index) => (\n        <li key={index}>\n          {person.name} <div>&nbsp;{person.number}</div>{' '}\n          <button onClick={() => deleteContact(person.id, person.name)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default ContactList;\n","import React from 'react';\n\nconst AddContactForm = ({ ...props }) => {\n  return (\n    <>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          Name:\n          <input\n            type='text'\n            value={props.newName}\n            onChange={props.handleNewContact}\n          />\n        </div>\n        <div>\n          Contact Number:\n          <input\n            type='text'\n            value={props.newPhoneNumber}\n            onChange={props.handleNewPhoneNumber}\n          />\n        </div>\n        <div>\n          <button type='submit'>Add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n","import React from 'react';\nimport './Message.css';\n\nconst Message = ({ action, error }) => {\n  if (action === null) return null;\n\n  const messages = {\n    CRUD: {\n      addPerson: 'New contact is added to the phonebook',\n      changeNumber: 'The contact phone number updated',\n      deletePerson:\n        'Contact successfully deleted from the phonebook successfully',\n    },\n    errors: {\n      deletePerson: 'The contact is already removed from the phonebook',\n    },\n  };\n\n  const messageStyle =\n    action === 'add'\n      ? 'add general'\n      : action === 'update'\n      ? 'update general'\n      : action === 'delete'\n      ? 'delete general'\n      : null;\n\n  return (\n    <div className={messageStyle}>\n      <span className='.error general'>\n        {error ? messages.errors.deletePerson : null}\n      </span>\n      {error\n        ? null\n        : action === 'add'\n        ? messages.CRUD.addPerson\n        : action === 'update'\n        ? messages.CRUD.changeNumber\n        : action === 'delete'\n        ? messages.CRUD.deletePerson\n        : null}\n    </div>\n  );\n};\n\nexport default Message;\n","import axios from 'axios';\nconst baseUrl = `/api/persons`;\n\nconst getPersons = (cb) =>\n  axios\n    .get(baseUrl)\n    .then((response) => response.data)\n    .then(cb);\n\nconst addPerson = (newPerson, cb) =>\n  axios\n    .post(baseUrl, newPerson)\n    .then((response) => response.data)\n    .then(cb);\n\nconst deletePerson = (contactID, cb, cbError) =>\n  axios\n    .delete(`${baseUrl}/${contactID}`)\n    .then((response) => response.data)\n    .then(cb)\n    .catch(cbError);\n\nconst updatePerson = (updatedPerson, cb) =>\n  axios\n    .put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\n    .then((response) => response.data)\n    .then(cb);\n\nconst phonebookRecerd = {\n  getPersons,\n  addPerson,\n  deletePerson,\n  updatePerson,\n};\n\nexport default phonebookRecerd;\n","import React, { useEffect, useState } from 'react';\nimport SearchPhonebook from './SearchPhonebook/SearchPhonebook';\nimport ContactList from './ContactsList/ContactList';\nimport AddContactForm from './AddContactForm/AddContactForm';\nimport Message from './Message/Message';\nimport phonebookRecerd from '../server/server';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [searchContact, setSearchContact] = useState({});\n  const [actionMessage, setActionMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    phonebookRecerd.getPersons((data) => setPersons(data));\n  }, []);\n\n  if (/[^\\w\\s]/g.test(newName)) {\n    alert(`${newName} is not a valid entry please try again`);\n    setNewName('');\n    setNewPhoneNumber('');\n  }\n\n  const handleSearchPhonebook = (event) => {\n    if (event.key === 'Enter') {\n      const searchValue = event.target.value;\n      setSearchContact({\n        searchValue,\n        searchResult: persons.find(\n          (person) => person.name.toLowerCase() === searchValue.toLowerCase()\n        ),\n      });\n    }\n\n    return;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Error handling conditions\n    if (/[^\\w\\s]/g.test(newName)) {\n      alert(`${newName} is not a valid entry please try again`);\n      setNewName('');\n      setNewPhoneNumber('');\n\n      return;\n    }\n    if (!/\\d/g.test(newPhoneNumber)) {\n      alert(`${newPhoneNumber} is not a valid entry. Please try again`);\n      setNewName('');\n      setNewPhoneNumber('');\n\n      return;\n    }\n    if (\n      !persons.every(\n        (person) => person.name.toLowerCase() !== newName.toLowerCase()\n      )\n    ) {\n      if (!persons.every((person) => person.number !== newPhoneNumber)) {\n        console.log('already true');\n        alert(`${newName} already exists in the phonebook`);\n        setNewName('');\n        setNewPhoneNumber('');\n        return;\n      }\n      const updatedContact = {\n        ...persons.find((person) => person.name === newName),\n        number: newPhoneNumber,\n      };\n      if (\n        window.confirm(\n          `${updatedContact.name} is already added to the phonebook, do you want to update old number with a new number?`\n        )\n      ) {\n        phonebookRecerd.updatePerson(updatedContact, (data) =>\n          setPersons(\n            persons.map((person) => (person.id === data.id ? data : person))\n          )\n        );\n\n        setNewName('');\n        setNewPhoneNumber('');\n        setActionMessage('update');\n\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n        return;\n      } else {\n        setNewName('');\n        setNewPhoneNumber('');\n      }\n    }\n\n    if (\n      !persons.every(\n        (person) =>\n          person.name.toLowerCase() !== newName.toLowerCase() &&\n          person.number === newPhoneNumber\n      )\n    ) {\n    }\n    phonebookRecerd.addPerson(\n      {\n        name: newName,\n        number: newPhoneNumber,\n      },\n      (data) => {\n        setPersons(persons.concat(data));\n        setNewName('');\n        setNewPhoneNumber('');\n        setActionMessage('add');\n        setTimeout(() => {\n          setActionMessage(null);\n        }, 5000);\n      }\n    );\n  };\n\n  const handleNewContact = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewPhoneNumber = (event) => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleDeleteContact = (id, person) => {\n    if (window.confirm(`Are you sure to delete ${person}?`))\n      phonebookRecerd.deletePerson(\n        id,\n        () => {\n          phonebookRecerd.getPersons((data) => setPersons(data));\n        },\n        (error) => {\n          setErrorMessage(`deleteError`);\n          setPersons(persons.filter((person) => person.id !== id));\n          console.error(error.message);\n\n          setTimeout(() => {\n            setActionMessage(null);\n          }, 5000);\n        }\n      );\n    setActionMessage('delete');\n    setTimeout(() => {\n      setActionMessage(null);\n    }, 5000);\n\n    return;\n  };\n\n  return (\n    <div className='App'>\n      <h2>Phonebook</h2>\n      <Message action={actionMessage} error={errorMessage} />\n      <SearchPhonebook\n        handleSearch={handleSearchPhonebook}\n        searchContact={searchContact}\n      />\n      <AddContactForm\n        handleSubmit={handleSubmit}\n        newName={newName}\n        handleNewContact={handleNewContact}\n        newPhoneNumber={newPhoneNumber}\n        handleNewPhoneNumber={handleNewPhoneNumber}\n      />\n      <ContactList persons={persons} deleteContact={handleDeleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}