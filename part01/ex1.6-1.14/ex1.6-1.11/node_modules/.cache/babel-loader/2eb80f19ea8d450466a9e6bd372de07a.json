{"ast":null,"code":"var _jsxFileName = \"/home/nader/Projects/FullStackOpen2021/part01/ex1.6-1.14/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport RatingButton from './RatingButton/RatingButton';\nimport RatingStats from './RatingStats/RatingStats';\nimport NavBar from './NavBar/NavBar';\nimport Table from './Table/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [goodRate, setGoodRate] = useState(0);\n  const [badRate, setBadRate] = useState(0);\n  const [neutralRate, setNeutralRate] = useState(0);\n\n  const formatValue = value => Number(value.toFixed(2)); // Feedback Values\n\n\n  const totalFeedback = goodRate + neutralRate + badRate;\n  const averageScore = totalFeedback === 0 ? 0 : formatValue((goodRate * 1 + neutralRate * 0 + badRate * -1) / totalFeedback);\n  const positiveFeedback = totalFeedback === 0 ? 0 : formatValue(goodRate / totalFeedback);\n\n  const handleFeedback = ratingText => _event => ratingText === 'Good' ? setGoodRate(goodRate + 1) : ratingText === 'Neutral' ? setNeutralRate(neutralRate + 1) : ratingText === 'Bad' ? setBadRate(badRate + 1) : null;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App \",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        text: \"Give Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(RatingButton, {\n          text: \"Good\",\n          handleRatingsStats: handleFeedback('Good')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RatingButton, {\n          text: \"Neutral\",\n          handleRatingsStats: handleFeedback('Neutral')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RatingButton, {\n          text: \"Bad\",\n          handleRatingsStats: handleFeedback('Bad')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalFeedback ? null : `No feedback is given yet`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: totalFeedback ? 'rating-stats' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          text: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(RatingStats, {\n            text: \"Good\",\n            value: goodRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RatingStats, {\n            text: \"Neutral\",\n            value: neutralRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RatingStats, {\n            text: \"Bad\",\n            value: badRate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RatingStats, {\n            text: \"Total Feedback\",\n            value: totalFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RatingStats, {\n            text: \"Average\",\n            value: averageScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RatingStats, {\n            text: \"Positive Feedback\",\n            value: positiveFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        goodRate: goodRate || 0,\n        neutralRate: neutralRate || 0,\n        badRate: badRate || 0,\n        totalFeedback: totalFeedback || 0,\n        averageScore: averageScore || 0,\n        positiveFeedback: positiveFeedback || 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"XvQ50is/LTx9ZHFimV47rr0QbhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nader/Projects/FullStackOpen2021/part01/ex1.6-1.14/src/components/App.js"],"names":["React","useState","Header","RatingButton","RatingStats","NavBar","Table","App","goodRate","setGoodRate","badRate","setBadRate","neutralRate","setNeutralRate","formatValue","value","Number","toFixed","totalFeedback","averageScore","positiveFeedback","handleFeedback","ratingText","_event"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header/Header';\nimport RatingButton from './RatingButton/RatingButton';\nimport RatingStats from './RatingStats/RatingStats';\nimport NavBar from './NavBar/NavBar';\nimport Table from './Table/Table';\n\nconst App = () => {\n  const [goodRate, setGoodRate] = useState(0);\n  const [badRate, setBadRate] = useState(0);\n  const [neutralRate, setNeutralRate] = useState(0);\n\n  const formatValue = (value) => Number(value.toFixed(2));\n\n  // Feedback Values\n  const totalFeedback = goodRate + neutralRate + badRate;\n  const averageScore =\n    totalFeedback === 0\n      ? 0\n      : formatValue(\n          (goodRate * 1 + neutralRate * 0 + badRate * -1) / totalFeedback\n        );\n\n  const positiveFeedback =\n    totalFeedback === 0 ? 0 : formatValue(goodRate / totalFeedback);\n\n  const handleFeedback = (ratingText) => (_event) =>\n    ratingText === 'Good'\n      ? setGoodRate(goodRate + 1)\n      : ratingText === 'Neutral'\n      ? setNeutralRate(neutralRate + 1)\n      : ratingText === 'Bad'\n      ? setBadRate(badRate + 1)\n      : null;\n\n  return (\n    <>\n      <NavBar />\n      <main className='App '>\n        <Header text='Give Feedback' />\n        <span className='buttons'>\n          <RatingButton\n            text='Good'\n            handleRatingsStats={handleFeedback('Good')}\n          />\n          <RatingButton\n            text='Neutral'\n            handleRatingsStats={handleFeedback('Neutral')}\n          />\n          <RatingButton text='Bad' handleRatingsStats={handleFeedback('Bad')} />\n        </span>\n        <span>{totalFeedback ? null : `No feedback is given yet`}</span>\n        <section className={totalFeedback ? 'rating-stats' : 'hidden'}>\n          <Header text='Statistics' />\n          <div className=''>\n            <RatingStats text='Good' value={goodRate} />\n            <RatingStats text='Neutral' value={neutralRate} />\n            <RatingStats text='Bad' value={badRate} />\n            <RatingStats text='Total Feedback' value={totalFeedback} />\n            <RatingStats text='Average' value={averageScore} />\n            <RatingStats text='Positive Feedback' value={positiveFeedback} />\n          </div>\n        </section>\n        <Table\n          goodRate={goodRate || 0}\n          neutralRate={neutralRate || 0}\n          badRate={badRate || 0}\n          totalFeedback={totalFeedback || 0}\n          averageScore={averageScore || 0}\n          positiveFeedback={positiveFeedback || 0}\n        />\n      </main>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}